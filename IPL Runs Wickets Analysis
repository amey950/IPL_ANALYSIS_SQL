Q) find the total matches conducted in IPL

SELECT COUNT(DISTINCT(ID)) FROM IPL_DATA ;    /* 816 MATCHES FOR WHICH DATA IS PRESENT IN DATBASE */ 
---------------------------------------------------------------------------------------------------------------------
Q) FIND THE TOTAL NUMBER OF 6s (BOUNDRY SIXER) IN ENTIRE IPL TIMESPAN

SELECT COUNT(*) FROM IPL_DATA WHERE BATSMAN_RUN = 6 ;
---------------------------------------------------------------------------------------------------------------------
Q) FIND THE TOTAL NUMBER OF 4s (BOUNDRY FOUR) IN ENTIRE IPL TIMESPAN

SELECT COUNT(*) FROM IPL_DATA WHERE BATSMAN_RUN = 4 ;
---------------------------------------------------------------------------------------------------------------------
Q) FIND THE TOP 5 BOWLERS AND THEIR TOTAL WICKETS TAKEN

WITH CTE AS (SELECT * FROM IPLBALL WHERE IS_WICKET = 1)

SELECT BOWLER , COUNT(*) 
FROM CTE GROUP BY 1 ORDER BY 2 DESC 
LIMIT 5; 

SL Malinga 188
DJ Bravo 175
A Mishra 169
PP Chawla 164
Harbhajan Singh 161
---------------------------------------------------------------------------------------------------------------------
Q) FIND THE TOP 5 BOWLERS WHO HAVE GIVEN MAXIMUM BOUNDRIES

WITH CTE AS (SELECT * FROM IPLBALL WHERE TOTAL_RUNS IN (4,6))
SELECT bowler , COUNT(*) FROM CTE 
GROUP BY 1 ORDER BY 2 DESC
LIMIT 5;

UT Yadav 513
PP Chawla 508
P Kumar 447
DJ Bravo 446
Harbhajan Singh 437

---------------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 BATSMAN WHO HAVE SCORED HIGHEST NUMBER OF 6s

WITH CTE AS (SELECT * FROM IPL_DATA WHERE BATSMAN_RUN = 6)
SELECT BATSMAN , COUNT(*) FROM CTE GROUP BY 1 ORDER BY 2 DESC LIMIT 5 ;

/* CH Gayle 344
AB de Villiers 232
MS Dhoni 214
RG Sharma 212
V Kohli 201  */ 
---------------------------------------------------------------------------------------------------------------------
Q) FIND THE TOP 5 BATSMAN WHO HAVE SCORED HIGHEST NUMBER OF 4s

WITH CTE AS (SELECT * FROM IPL_DATA WHERE BATSMAN_RUN = 4)
SELECT BATSMAN , COUNT(*) FROM CTE GROUP BY 1 ORDER BY 2 DESC LIMIT 5 ;

/*
S Dhawan 595
DA Warner 515
V Kohli 508
G Gambhir 499
SK Raina 494
*/
---------------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 BATSMAN WITH HIGHEST RUNS

SELECT 
BATSMAN , SUM(BATSMAN_RUNS) 
FROM IPL_DATA 
GROUP BY 1 ORDER BY 2 DESC LIMIT 5 ;

/*
V Kohli 5878
SK Raina 5368
DA Warner 5254
RG Sharma 5230
S Dhawan  5197 */

---------------------------------------------------------------------------------------------------------------------

Q) FIND THE WIN PERCENTAGE OF TEAM 'MUMBAI INDIANS

WITH TEAM_PLAYED AS 
(SELECT 
COUNT(*)                    /*  HERE WE ARE FINDING TOTAL MATCHES PLAYED BY MUMBAI INDIANS */ 
FROM 
IPL_MATCHES 
WHERE TEAM1 = 'Mumbai Indians' OR TEAM2 = 'Mumbai Indians'),

TEAM_WON AS 
(SELECT                   /* HERE WE ARE FINDING TOTAL MATCHES WON BY THE MUMBAI INDIANS */ 
COUNT(*) 
FROM IPL_MATCHES WHERE WINNER = 'Mumbai Indians' )

SELECT 
((SELECT * FROM TEAM_WON)*100 / (SELECT * FROM TEAM_PLAYED));   /* WINNING PERCENTAGE OF TEAM */ 

---------------------------------------------------------------------------------------------------------------------

Q) CREATE CHART / TABLE TELLING TOTAL MATCHES PLAYED , TOTAL MATCHES WON AND WIN PERCENTAGE

WITH TEAM_PLAYED (TEAM_NAME , PLAY_NUMBERS) AS       /* THIS CTE IS FOR TOTAL MATCHES PLAYED BY EACH TEAM */ 
(
(SELECT 'Chennai Super Kings',COUNT(*) FROM IPL_MATCHES WHERE TEAM1 = 'Chennai Super Kings' OR TEAM2 = 'Chennai Super Kings')
UNION
(SELECT 'Royal Challengers Bangalore',COUNT(*) FROM IPL_MATCHES WHERE TEAM1 = 'Royal Challengers Bangalore' OR TEAM2 = 'Royal Challengers Bangalore')
UNION
(SELECT 'Kings XI Punjab',COUNT(*) FROM IPL_MATCHES WHERE TEAM1 = 'Kings XI Punjab' OR TEAM2 = 'Kings XI Punjab')
)

, TEAM_WON (TEAM_NAME , WIN_NUMBERS) AS      /* THIS CTE IS FOR TOTAL WINS BY EACH TEAM */
(
(SELECT 'Chennai Super Kings', COUNT(*) FROM IPL_MATCHES WHERE WINNER = 'Chennai Super Kings')
UNION
(SELECT 'Royal Challengers Bangalore', COUNT(*) FROM IPL_MATCHES WHERE WINNER = 'Royal Challengers Bangalore')
UNION
(SELECT 'Kings XI Punjab', COUNT(*) FROM IPL_MATCHES WHERE WINNER = 'Kings XI Punjab')
),

CTE_3 AS         /* THIS FINAL CTE IS FOR JOINING ABOVE 2 CTEs */ 
(SELECT * 
FROM 
TEAM_PLAYED INNER JOIN TEAM_WON ON TEAM_PLAYED.TEAM_NAME = TEAM_WON.TEAM_NAME)

SELECT *, 
(WIN_NUMBERS /PLAY_NUMBERS ) *100 AS WIN_PRCNT       /* FINAL QUERY TO FIND WIN PERCENTAGE */ 
FROM CTE_3 ;

/* USER OF THIS QUERY CAN ADD OTHER TEAM IN ABOVE CTEs */

---------------------------------------------------------------------------------------------------------------------

Q) FIND COLLECTIVE STRIKE RATE BY SPLITTING 20 OVERS IN 4 BUCKETS

WITH CTE_RUNS (OVERS , RUNS) AS (                                  /* THIS CTE IS FOR TOTAL RUNS SCORE IN DIFFERENT OVER SLABS */
SELECT '0-4' , SUM(TOTAL_RUNS) FROM IPLX WHERE OVER BETWEEN 0 AND 4
UNION
SELECT '5-9' , SUM(TOTAL_RUNS) FROM IPLX WHERE OVER BETWEEN 5 AND 9
UNION
SELECT '10-14' , SUM(TOTAL_RUNS) FROM IPLX WHERE OVER BETWEEN 10 AND 14
UNION
SELECT '15-20' , SUM(TOTAL_RUNS) FROM IPLX WHERE OVER BETWEEN 15 AND 20
)

, CTE_BALLS (OVERS , BALLS) AS (                              /* THIS CTE IS FOR TOTAL BALLS BOLWED IN DIFFERENT OVER SLABS */
SELECT '0-4' , COUNT(*) FROM IPLX WHERE OVER BETWEEN 0 AND 4
UNION
SELECT '5-9' , COUNT(*) FROM IPLX WHERE OVER BETWEEN 5 AND 9
UNION
SELECT '10-14' , COUNT(*) FROM IPLX WHERE OVER BETWEEN 10 AND 14
UNION
SELECT '15-20' , COUNT(*) FROM IPLX WHERE OVER BETWEEN 15 AND 20
)

, CTE_FINAL AS (SELECT * FROM CTE_RUNS INNER JOIN CTE_BALLS ON CTE_RUNS.OVERS = CTE_BALLS.OVERS)   /* JOINING ABOVE 2 CTE */

SELECT *, (100* RUNS/BALLS) AS STRK_RATE FROM CTE_FINAL ORDER BY STRK_RATE DESC;   /* FINAL QUERY */

---------------------------------------------------------------------------------------------------------------------

Q) TOP 5 BIGGEST RUNS SCORED    ( DOES NOT MATTER ID FIRST OR SECOND INNINGS ) 

SELECT ID ,INNING, SUM(TOTAL_RUNS) 
FROM IPLX 
GROUP BY 1,2 
ORDER BY 3 DESC 
LIMIT 5;

---------------------------------------------------------------------------------------------------------------------

Q) TOP 5 BIGGETS CHASE / 2ND INNINGS SCORE

WITH CTE AS 
( SELECT * 
FROM IPLX
WHERE INNING = 2)

SELECT 
ID ,batting_team ,SUM(TOTAL_RUNS) 
FROM CTE 
GROUP BY 1 ,2 ORDER BY 3 DESC LIMIT 5 ;

---------------------------------------------------------------------------------------------------------------------

Q) FIND THE PLAYERS WHO HAVE SCORED CENTURY

WITH CTE AS 
(SELECT 
ID , BATSMAN ,SUM(BATSMAN_RUNS) AS TOTAL_RUNS 
FROM IPLX 
GROUP BY 1,2 ORDER BY 3 DESC)

SELECT * FROM CTE WHERE TOTAL_RUNS => 100 ;

---------------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 PLAYERS WITH MAXIMUM NUMBER OF CENTURIES , ALSO MENTION RESPECTIVE PLAYER'S NUMBER OF CENTURIES

WITH CTE AS 
(SELECT 
ID , BATSMAN ,SUM(BATSMAN_RUNS) AS TOTAL_RUNS 
FROM IPLX 
GROUP BY 1,2 ORDER BY 3 DESC)

, CTE_2 AS (SELECT * FROM CTE WHERE TOTAL_RUNS => 100)

SELECT 
BATSMAN , COUNT(*) AS TOTAL_COUNT 
FROM CTE_2 
GROUP BY 1 ORDER BY 2 DESC LIMIT 5 ;

/*
CH Gayle 6
SR Watson 4
AB de Villiers 3
DA Warner 3
V Kohli 3
*/

---------------------------------------------------------------------------------------------------------------------

Q) FIND THE STRIKE RATE OF PLAYERS WHO HAVE SCORED MORE THAN 1000 TOTAL RUNS IN ENTIRE IPL CARRER

WITH CTE_RUNS AS 
(SELECT BATSMAN , SUM(BATSMAN_RUNS) AS TOTAL_RUNS FROM IPLC GROUP BY 1 ),

CTE_BALLS AS 
(SELECT BATSMAN , COUNT(*) AS TOTAL_BALLS FROM IPLC GROUP BY 1),

CTE_FINAL AS (SELECT * FROM CTE_RUNS INNER JOIN CTE_BALLS ON CTE_RUNS.BATSMAN = CTE_BALLS.BATSMAN),

CTE_STRK AS (SELECT *, ((TOTAL_RUNS / TOTAL_BALLS )* 100 ) AS STRK_RATE FROM CTE_FINAL ORDER BY STRK_RATE DESC)

SELECT *
FROM CTE_STRK 
WHERE TOTAL_RUNS > 1000
OTRDER BY STRK_RATE DESC ;
---------------------------------------------------------------------------------------------------------------------

Q) FIND OUT THE BOWLERS AND THEIR ECONOMY RATE

WITH CTE_BALLS AS             /* HERE WE ARE FINDING NUMBER OF OVERS BY EACH BOWLER */ 
(SELECT 
bowler , (COUNT(*) / 6) AS TOTAL_OVERS 
FROM IPLC GROUP BY 1),

CTE_RUNS_GIVEN AS            /* HERE WE ARE FINDING TOTAL RUNS GIVEN BY EACH BOWLER */ 
(SELECT
BOWLER , SUM(TOTAL_RUNS) AS TOTAL_RUNS 
FROM IPLC GROUP BY 1),

CTE_FINAL AS              /* JOINING THE 2 CTEs */
(SELECT * 
FROM CTE_BALLS INNER JOIN CTE_RUNS_GIVEN ON CTE_BALLS.BOWLER = CTE_RUNS_GIVEN.BOWLER) ,

CTE_STRK AS             /*  finding the ECONOMY RATE OF EACH BOWLER */ 
(SELECT *, 
(TOTAL_RUNS / TOTAL_OVERS)*100 AS ECO_RATE 
FROM CTE_FINAL ORDER BY ECO_RATE

SELECT * FROM CTE_STRK LIMIT 10;     
---------------------------------------------------------------------------------------------------------------------

Q) FIND THE TOTAL RUNS SCORED BY TEAM 'MUMBAI INDIANS'

SELECT SUM(TOTAL_RUNS) 
FROM IPLX 
WHERE BATTING_TEAM = 'MUMBAI INDIANS' ;

---------------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 BATSMAN WHO HAD MAXIMUM DOT BALLS FACED

WITH CTE AS (SELECT * FROM IPLX WHERE TOTAL_RUNS = 0 )   /* CTE WITH ONLY ROWS WITH DOT BALLS */ 

SELECT BATSMAN , COUNT(*) AS TOTAL_DOT_BALLS FROM CTE    /* GROUPING DATA BY BATSMAN */ 
GROUP BY 1 ORDER BY 2 DESC
LIMIT 5 ;                      /* FETCHING TOP 5 RECORDS */ 

-----------------------------------------------------------------------------------------------------------------------

Q) BOWLERS WHO GAVE MAXIMUM SIXES

WITH CTE AS (SELECT * FROM IPLX WHERE BATSMAN_RUNS = 6)

SELECT BOWLER , COUNT(*) 
FROM CTE GROUP BY 1 ORDER BY 2 DESC 
LIMIT 5; 

-----------------------------------------------------------------------------------------------------------------------

Q) WHICH TEAM HAS HIT MAXIMUM NUMBER OF SIXES

WITH CTE AS (SELECT * FROM IPLX WHERE BATSMAN_RUNS = 6)

SELECT 
BATTTING_TEAM , COUNT(*) 
FROM CTE 
GROUP BY 1 ORDER BY 2 DESC 
LIMIT 1 ;

-----------------------------------------------------------------------------------------------------------------------

Q) FIND THE NUMBER OF MAIDEN OVERS BY ALL BOWLERS , ORDER IT BY NUMBER OF MAIDEN OVERS IN DESC ORDER

WITH CTE AS 
(SELECT * 
FROM IPLX                        /*  HERE WE ARE FILTERING THE DATA FOR DOT BALLS ONLY */
WHERE TOTAL_RUNS = 0),

CTEE AS 
(SELECT 
ID , INNING , OVER ,bowler ,COUNT(*) AS TOTAL_COUNT 
FROM CTE                                             /* GROUPING THE DOT BALLS BY OVER , MATCH , INNING */ 
GROUP BY ID , INNING , OVER , bowler),

CTE_3 AS 
(SELECT *                    /* NUMBER OF DOT BALLS SHOULD BE 6 */ 
FROM CTEE 
WHERE TOTAL_COUNT = 6)

SELECT 
BOWLER , COUNT(*)                /* FINNALY FETCHING BOWLERS AND THEIR MAIDEN OVERS */ 
FROM CTE_3 
GROUP BY 1 ORDER BY 2 DESC ;

-----------------------------------------------------------------------------------------------------------------------

Q) MAKE A CHART DENOTING TOTAL BOUNDRIES SCORED BY ALL TEAMS ORDER IT IN DESC ORDER  OF TOTAL BOUNDRIES

WITH CTE AS 
(SELECT * FROM IPLXX WHERE BATSMAN_RUNS IN (4 , 6))

SELECT 
BATTING_TEAM , COUNT(*) 
FROM CTE 
GROUP BY 1 ORDER BY 2 DESC ;

/*
Mumbai Indians 4034
Royal Challengers Bangalore 3729
Kings XI Punjab 3698   */ 

-----------------------------------------------------------------------------------------------------------------------
Q ) CHENNAI AND MUMBAI HAS RIVALRY , MAKE CHART DETAILING THEIR ENCOUNTERS 

/* SINCE WE ARE USING BALL BY BALL DATASET WHICH DO NOT HAVE SEPEARTE COLUMN OF WIN BY WICKETS OR RUNS OR TOSS INFO 
WE WILL HAVE TO TAKE THIS APPROACH */

WITH CTE AS 
(SELECT *                                                   /* filtering the data for 2 teams only */
FROM IPLXX 
WHERE (batting_team = 'Mumbai Indians' or batting_team = 'Chennai Super Kings') 
and  (bowling_team = 'Mumbai Indians' or bowling_team = 'Chennai Super Kings')),

CTEE AS
(SELECT                                                  /* per inning total score by both teams */
ID ,BATTING_TEAM ,SUM(TOTAL_RUNS) AS TOTAL_SUM 
FROM CTE GROUP BY 1,2 ORDER BY 1 ASC),

CTE_CSK AS 
(SELECT                                                  /* taking per inning total score by CSK */
ID , BATTING_TEAM , TOTAL_SUM AS CSK_SCORE 
FROM CTEE 
WHERE BATTING_TEAM = 'Chennai Super Kings') ,

CTE_MI AS 
(SELECT                                                  /* taking per inning total score by MI */
ID , BATTING_TEAM, TOTAL_SUM AS MI_SCORE FROM CTEE WHERE 
BATTING_TEAM = 'Mumbai Indians'),


CTE_FINAL AS 
(SELECT *                                                /* INNER JOIN OF ABOVE 2 CTEs */
FROM CTE_MI INNER JOIN CTE_CSK 
ON CTE_MI.ID = CTE_CSK.ID)

SELECT *
FROM CTE_FINAL                                          /* FINAL TOTAL SCORE COMPARISON QUERY */ 
WHERE CSK_SCORE < MI_SCORE ;

/* MI WON 18 MATCHES WHILE CSK WON 12 MATCHES */ 
-----------------------------------------------------------------------------------------------------------------------

Q) CREATE A CHART FOR TOTAL BOUNDRIES SCORED BY CSK AND MI WHEN PLAYING AGAINS EACH OTHER 

WITH CTE AS 
(SELECT * 
FROM IPLXX 
WHERE (batting_team = 'Mumbai Indians' or batting_team = 'Chennai Super Kings') 
and  (bowling_team = 'Mumbai Indians' or bowling_team = 'Chennai Super Kings')),

CTE_MI AS 
(SELECT 
ID , COUNT(*) AS TOTAL_COUNT_MI 
FROM CTE 
WHERE batting_team = 'Mumbai Indians' AND BATSMAN_RUNS IN (6,4) GROUP BY ID),

CTE_CSK AS 
(SELECT 
ID , COUNT(*) AS TOTAL_COUNT_CSK 
FROM CTE WHERE BATTING_TEAM = 'Chennai Super Kings' AND BATSMAN_RUNS IN(6,4) GROUP BY ID ),

CTE_FINAL AS 
(SELECT * FROM CTE_MI INNER JOIN CTE_CSK ON CTE_MI.ID = CTE_CSK.ID)

SELECT * FROM CTE_FINAL ;
-----------------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 BATSMAN WHO HAVE SCORED MAXIMUM 6s

WITH CTE AS (SELECT * FROM IPLBALL WHERE TOTAL_RUNS = 6)
SELECT BATSMAN , COUNT(*) FROM CTE 
GROUP BY 1 ORDER BY 2 DESC
LIMIT 5;

CH Gayle 344
AB de Villiers 232
MS Dhoni 214
RG Sharma 212
V Kohli 201
-----------------------------------------------------------------------------------------------------------------------

Q) FIND THE TOP 5 MATCH ID , INNING , BATTING AND BOWLING TEAM WHERE THE NUMBER OF 6s ARE HIGHEST

WITH CTE AS 
(SELECT * FROM IPLBALL WHERE BATSMAN_RUNS = 6)

SELECT 
ID , INNING ,BATTING_TEAM,BOWLING_TEAM,COUNT(*) AS TOTAL_CNT 
FROM CTE 
GROUP BY ID , INNING ,BATTING_TEAM,BOWLING_TEAM 
ORDER BY COUNT(*) DESC 
LIMIT 5 ;

/* HIGHETS SIXES IN SINGLE INNINGS ARE 21 , HITTED BY BANGLORE AGAINST PUNE IN FIRST INNINGS */ 

-----------------------------------------------------------------------------------------------------------------------

Q) 

